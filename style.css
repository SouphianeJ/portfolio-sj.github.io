@import url('https://fonts.googleapis.com/css2?family=Fira+Code&family=Pacifico&family=IBM+Plex+Mono:wght@700&display=swap');

/* Reset CSS */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}



.dev-font {
    font-family: 'Fira Code', monospace; /* Style développeur */
}
h1 .handwritten-font {
    font-family: 'Pacifico', cursive; 
    font-weight: 400;
    font-style: normal;
}

/*
.handwritten-font {
    font-family: 'Dancing Script', cursive;  
}*/

.ibmplex-font {
    font-family: 'IBM Plex Mono', monospace;
    font-weight: 600;
    /*font-size: 1.5em; */
}

/* Color Variables */
:root {
    --dark-blue: #0A2540;
    --light-blue: #0070F3;
    --light-gray: #F2F4F6;
    --sage-green: #00C49A;
    --white: #FFFFFF;
    --light-corail: #EC6A84;
    --dark-corail: #A65C6B;
    --light-beige: #FBF8F6;
    --beige: #F3EBE5;
    --light-green: #C7DDDB;
    --green: #B5CECC;
    --light-gblue: #C7D0DD;
    --gblue: #C6CFDC;

    --primary: #0A2540;
    --secondary-light: #FBF8F6;
    --secondary-deep: #E1D5CC;
    
}

/* Global Styles */
body {
    font-family: 'Lato', sans-serif;
    line-height: 1.6;
    color: var(--primary);
    background-color: var(--secondary-light);
    transition: background-color 0.5s, color 0.5s;
}

/* Header */
/* Sticky Header */
.navbar {
    background-color: var(--primary);
    transition: all 0.3s ease;
}

.navbar .navbar-brand {
    font-family: 'Roboto Slab', serif;
    font-size: 1.5em;
    font-weight: bold;
    color: var(--white);
}

.navbar .nav-link {
    color: var(--white);
    font-size: 1em;
    transition: color 0.3s ease;
}

.navbar .nav-link:hover {
    color: var(--sage-green);
}

.navbar .navbar-toggler-icon {
    color: var(--white);
}


@keyframes scroll-alternate-large {
    0% {
        transform: translateX(60%);
    }
    50% {
        transform: translateX(-60%);
    }
    100% {
        transform: translateX(60%);
    }
}

@keyframes scroll-alternate-small {
    0% {
        transform: translateX(100%);
    }
    50% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

.scrolling-icons {
    display: flex;
    gap: 50px;
    animation: scroll-alternate-large 13s ease-in-out infinite;
}

@media (max-width: 768px) {
     .navbar .nav-link {
        font-size: 0.9em;
        display: inline-flex;
        align-items: center;
    }

    .navbar .nav-link i {
        margin-right: 5px;
    }
    .scrolling-icons {
        animation: scroll-alternate-small 6s ease-in-out infinite;
    }
    /* Centrer la ligne verticale */
    #experience .timeline::before {
        left: 0; /* Supprime la ligne centrale */
        width: 0; /* Ligne invisible sur mobile */
    }

    /* Timeline items en mode stacked */
    .timeline-item {
        width: 100%; /* Occupe toute la largeur */
        padding: 10px 20px; /* Ajuste le padding pour plus de confort */
        left: 0 !important; /* Réinitialise la position */
        transform: translateX(0); /* Supprime tout décalage */
    }

    .timeline-item.left, .timeline-item.right {
        left: 0; /* Force tous les items à se superposer */
    }

    /* Ajout d'une bordure gauche pour simuler la ligne */
    .timeline-item {
        border-left: 4px solid var(--secondary-deep);
        position: relative;
    }

    /* Indicateur circulaire pour chaque item */
    .timeline-item::before {
        content: '';
        position: absolute;
        left: -10px;
        top: 10px;
        width: 10px;
        height: 10px;
        background: var(--secondary-deep);
        border-radius: 50%;
    }
}
Changements effectués :
Centrage de la timeline :

Supprime la ligne centrale (::before) sur mobile en la rendant invisible (width: 0).
Empilement des éléments :

Les .timeline-item passent en largeur pleine (width: 100%) et s'empilent verticalement.
Ajout de la ligne verticale sur la gauche :

Une bordure gauche est ajoutée aux .timeline-item pour imiter la ligne centrale.
Ajout d'un indicateur circulaire :

Chaque item est précédé d'un petit cercle, positionné avec ::before.
Suppression des styles inutiles :

Les classes .left et .right sont neutralisées (left: 0 !important).
Aperçu du rendu attendu sur mobile :
Les éléments s'affichent verticalement, chacun prenant toute la largeur.
Une ligne verticale s'affiche à gauche de chaque élément, avec un petit cercle pour indiquer la position de l'événement.
Le texte devient plus lisible car il occupe toute la largeur disponible.
Améliorations possibles :
Si tu veux ajouter encore plus de clarté sur mobile, tu peux :

Ajouter des marges entre les éléments pour une meilleure séparation visuelle.
Utiliser des animations ou transitions légères pour faire apparaître les items avec fluidité.





Vous avez dit :
ok peux-tu ajouter un trait de couleur bleue entre chaque element de la timeline ?
ChatGPT a dit :
ChatGPT
Pour ajouter un trait bleu entre chaque élément de la timeline sur mobile, nous pouvons insérer une bordure ou un élément séparateur entre les .timeline-item. Voici comment modifier le CSS pour inclure cette séparation :

Mise à jour du CSS pour Mobile :
Ajoute cette partie dans le bloc @media (max-width: 768px) :

css
Copier le code
@media (max-width: 768px) {
    /* Centrer la ligne verticale */
    #experience .timeline::before {
        left: 0; /* Supprime la ligne centrale */
        width: 0; /* Ligne invisible sur mobile */
    }

    /* Timeline items en mode stacked */
    .timeline-item {
        width: 100%; /* Occupe toute la largeur */
        padding: 10px 20px; /* Ajuste le padding pour plus de confort */
        left: 0 !important; /* Réinitialise la position */
        transform: translateX(0); /* Supprime tout décalage */
    }

    .timeline-item.left, .timeline-item.right {
        left: 0; /* Force tous les items à se superposer */
    }

    /* Ajout d'une bordure gauche pour simuler la ligne */
    .timeline-item {
        border-left: 4px solid var(--secondary-deep);
        position: relative;
    }

    /* Indicateur circulaire pour chaque item */
    .timeline-item::before {
        content: '';
        position: absolute;
        left: -10px;
        top: 10px;
        width: 10px;
        height: 10px;
        background: var(--secondary-deep);
        border-radius: 50%;
    }

    /* Ajout d'un trait bleu entre chaque élément */
    .timeline-item:not(:last-child) {
        border-bottom: 2px solid blue; /* Séparation entre éléments */
        margin-bottom: 20px; /* Ajoute un espace pour mieux séparer */
        padding-bottom: 20px; /* Ajuste l'intérieur pour éviter que le texte touche le trait */
    }

}



/* Scrolling icons container */
.scrolling-icons-container {
  overflow: hidden;
  width: 100%;
}


/* Style for the icons */
.scrolling-icons i {
  font-size: 2rem;
  color: var(--secondary-deep);
}


/*header*/
header {
    background-color: var(--secondary-light);
    color: var(--primary);
    margin-top: 70px;/* Adjust this value based on navbar height */
}

.header-background {
    position: relative;
    overflow: hidden; /* Coupe le contenu qui dépasse */
    min-height: 150px; /* Ajustez la hauteur selon le SVG pour éviter un découpage */
    padding-top: 50px; /* Espace pour centrer le contenu verticalement */
    /*z-index: -1;*/
}


.svg-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    
}

/* Styles pour le texte et autres éléments */
header h1 {
    
    font-size: 2.5em;
    font-weight: 700;
    color: var(--primary);
}

header p {
    font-size: 1.2em;
    color: var(--primary);
}
/* Fin de header prompt box style chat gpt. Style de l'encart */
/* Conteneur pour centrer les boîtes */
.prompt-container {
    display: flex;
    flex-direction: column; /* Empile les éléments verticalement */
    align-items: center; /* Centre horizontalement */
    justify-content: center; /* Centre verticalement */
   /* min-height: 100vh; *//* Prend toute la hauteur de la page */
}

/* Styles de la boîte de prompt */
.prompt-container .prompt-box {
    width: 100vw;
    max-width: 600px;
    padding: 10px;
    border: 1px solid var(--light-gblue);
    border-radius: 8px;
    background-color: var(--light-gray);
    font-family: Arial, sans-serif;
    font-size: 1.2em;
    color: var(--primary);
    overflow: hidden;
    white-space: nowrap;
    margin-bottom: 10px;
    margin-left: 1px;
    margin-right: 1px;
}

/* Styles de la boîte de réponse dans .prompt-container */
.prompt-container .response-box {
    width: 100vw;
    max-width: 600px;
    padding: 10px;
    border: 1px solid var(--light-gblue);
    border-radius: 8px;
    background-color: var(--light-gray);
    font-family: Arial, sans-serif;
    font-size: 1.2em;
    color: var(--primary);
    margin-left: 1px;
    margin-right: 1px;
    display: none; /* Cacher la réponse au début */
}

/* Texte du prompt avec effet d'écriture dans .prompt-container */
.prompt-container #prompt-text {
    display: inline-block;
    white-space: nowrap;
    overflow: hidden;
    border-right: 3px solid rgba(0, 0, 0, 0.75);
    animation: typing 3s steps(30, end), blink-caret 0.75s step-end infinite;
}

/* Animation des trois petits points dans .prompt-container */
.prompt-container #loading-dots {
    display: inline-block;
    font-size: 1.2em;
    color: var(--primary);
    margin-right: 5px;
}

.prompt-container #loading-dots::after {
    content: "";
    animation: ellipsis 1.5s infinite;
}

@keyframes ellipsis {
    0% {
        content: "";
    }
    25% {
        content: ".";
    }
    50% {
        content: "..";
    }
    75% {
        content: "...";
    }
    100% {
        content: "";
    }
}

/* Animation d'écriture */
@keyframes typing {
   /* Not working
    from { width: 0; }
    to { width: 100%; }*/
}

/* Animation du curseur clignotant */
@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: rgba(0, 0, 0, 0.75); }
}


.btn-cv {
    background-color: var(--primary);
    color: var(--secondary-light);
    padding: 10px 20px;
    border-radius: 20px;
    transition: background-color 0.3s ease;
    
}

.btn-cv:hover {
    background-color: var(--secondary-deep);
}

.profile-image {
    padding: 5px;
    background: var(--secondary-deep); /* Dégradé autour du cercle */
    border-radius: 50%; /* Assure un contour rond */
    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
}

.profile-image img {
    border-radius: 50%; /* Maintien du cercle pour l'image */
    padding: 5px;
    background-color: #ffffff; /* Fond blanc pour l'image */
}

.profile-image:hover {
    transform: scale(1.07);
}


/* Section Titles */
h2 {
    font-family: 'Roboto Slab', serif;
    font-size: 2em;
    margin-bottom: 20px;
    text-align: center;
    font-weight: 600;
}

/* Timeline for Experience Section */
#experience .timeline {
    position: relative;
    padding: 20px 0;
}

.timeline::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 4px;
    background: var(--secondary-deep);
}

.timeline {
  word-break: break-word;
}
.timeline-item {
    position: relative;
    width: 50%;
    padding: 20px;
}

.timeline-item.left {
    left: 0;
}

.timeline-item.right {
    left: 50%;
}

.timeline-item h3 {
    font-weight: 700;
}
/* Timeline Item Animation */
.timeline-item {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
}
.timeline-item.fade-in {
    opacity: 1;
    transform: translateY(0);
}


/* Skills Section */
#skills h3 {
    font-size: 1.5em;
    color: var(--dark-corail);
}

#skills p {
    font-size: 1em;
}

/* Project Cards */
#projects .card {
    background-color: var(--light-green);
    border: none;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, background-color 0.5s, color 0.5s; /* Combine toutes les transitions */
}

#projects .card:hover {
    transform: translateY(-10px) scale(1.07); /* Combine les transformations dans une seule déclaration */
}

.modal-content {
    padding: 20px;
    border-radius: 8px;
}

.modal-header .close {
    font-size: 1.5rem;
}

/* Contact Form */
#contact .form-control {
    border-radius: 10px;
    border: 1px solid var(--secondary-deep);
}

#contact button {
    background-color: var(--secondary-deep);
    color: var(--primary);
    border-radius: 20px;
    padding: 10px 20px;
    transition: background-color 0.3s ease;
}

#contact button:hover {
    background-color: var(--sage-green);
}

/* Footer */
footer {
    background-color: var(--dark-blue);
    color: var(--white);
    font-size: 0.9em;
}

footer a {
    color: var(--light-blue);
    text-decoration: none;
    transition: color 0.3s ease;
}

footer a:hover {
    color: var(--sage-green);
}


.special-section {
  position: relative;
  height: 90vh;
  background-color: var(--primary);
  color: var(--secondary-light);
  max-height: fit-content;
  overflow: hidden;
}

.special-section h2 {
    color: var(--secondary-light);
}

#particleCanvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}
